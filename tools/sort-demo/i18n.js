const i18nAll = {
    cn: {
        title: "KX排序算法演示工具",
        dataNumber: "数据个数",
        dataGenerateType: "数据生成",
        dataGenerateTypes: {
            random: "线性打乱",
            ascend: "线性正序",
            descend: "线性倒序",
            group2: "两组值打乱",
            group7: "七组值打乱",
            n2Diff: "两个值不同",
            completelyRandom: "完全随机",
            cubic: "三次方打乱",
            sin: "正弦打乱"
        },
        showSpeed: "演示速度",
        sortAlgorithm: "排序算法",
        sound: "声音",
        horizon: "横向",
        console: "控 制 台 ",
        pause: "暂停",
        continue: "继续",
        nextStep: "下一步",
        start: "开始",
        stop: "停止",
        state: "系统状态",
        states: {
            idle: '空闲',
            sorting: '排序中',
            paused: '暂停',
            finished: '排序完成'
        },
        algorithmDesc: "算法描述",
        timeComplexity: "时间复杂度",
        spaceComplexity: "空间复杂度",
        isStable: "是否稳定",
        yes: "是",
        no: "否",
        tip: "特别提示",
        tipDesc: "数据量大，可能会造成卡顿。",
        note: "注",
        noteDesc: "由于记录的步骤个数不一样，演示速度不能代表真实执行的速度。",
        configParams: "配置参数",
        lineMark: "位置标记",
        lineUpdate: "数值更新",
        lineFinished: "排序完成",
        sort: "排序",
        merge: "归并",
        swap: "交换",
        move: "移动",
        insert: "插入",
        computeMaxValue: "计算最大值",
        findMaxMinValue: "寻找最大最小值",
        initBuckets: "初始化桶",
        allocateDataToBuckets: "将数据分配到各个桶中",
        bucketsToOriginArray: "将桶中的数据保存到原数组",
        heapAdjust: "堆调整",
        bucketCounting: "桶计数",
        binarySearchInsertPosition: "二分查找插入位置",
        oddNumber: "奇数",
        evenNumber: "偶数"
    },
    en: {
        title: "KX sorting algorithm online demonstration",
        dataNumber: "Data number",
        dataGenerateType: "Data generation",
        dataGenerateTypes: {
            random: "Linear Shuffled",
            ascend: "Linear Ascend",
            descend: "Linear Descend",
            group2: "Two Group Shuffled",
            group7: "Seven Group Shuffled",
            n2Diff: "Two Values Different",
            completelyRandom: "Random Shuffled",
            cubic: "Cubic Shuffled",
            sin: "Sine Shuffled",
        },
        showSpeed: "Play speed",
        sortAlgorithm: "Sorting algorithm",
        sound: "Sound",
        horizon: "Horizontal",
        console: "Console",
        pause: "Pause",
        continue: "Continue",
        nextStep: "Next",
        start: "Start",
        stop: "Stop",
        state: "System status",
        states: {
            idle: 'Idle',
            sorting: 'Sorting',
            paused: 'Paused',
            finished: 'Finished'
        },
        algorithmDesc: "Algorithm description",
        timeComplexity: "Time Complexity",
        spaceComplexity: "Space Complexity",
        isStable: "Is it stable",
        yes: "Yes",
        no: "No",
        tip: "Tip",
        tipDesc: "The amount of data is large, which may cause stuttering.",
        note: "Note",
        noteDesc: "Due to the different numbers of the record steps, the demonstration speed cannot represent the speed of real execution.",
        configParams: "Configuration Parameters",
        lineMark: "Location mark",
        lineUpdate: "Value updating",
        lineFinished: "Sorting completed",
        sort: "Sort",
        merge: "Merge",
        swap: "Swap",
        move: "Move",
        insert: "Insert",
        computeMaxValue: "Calculate maximum value",
        findMaxMinValue: "Find maximum and minimum value",
        initBuckets: "Init buckets",
        allocateDataToBuckets: "Allocate the data into each buckets",
        bucketsToOriginArray: "Save the data in the buckets to the original array",
        heapAdjust: "Heap adjustment",
        bucketCounting: "Bucket Counting",
        binarySearchInsertPosition: "Binary search insert position",
        oddNumber: "Odd number",
        evenNumber: "Even number"
    }
}